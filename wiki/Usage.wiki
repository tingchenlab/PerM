#labels Featured
= Compile =
The attached make file is for linux with gcc 4.2 or later. Because OpenMP are support after gcc 4.2, use an alternative makefile "(no openMP)" by remove the flag "-fopenmp". 
The code has also been test compiled with visual c++ on a Win32 machine, without "openmp".

= Options =
PerM uses both a configuration file and command line options. The input and configuration files should be in the same path.  

== Command Line Options ==  
The command line options include a reference, a data set, and sensitivity threshold. They should be listed in the the following order: 
  # Reference File in FASTA format or a text file which lists many consecutive FASTA files.  
  # A read set in FASTA, PRB or CFSATA format or a text file which lists many read sets.  
  # An integer for the mapping sensitivity (ie. full sensitivity to 3 mismatches)

  * Ex: {{{./PerM_P anthracis.fasta 7B.csfasta 3}}}
  * Ex: {{{./PerM_P HumanGenome.txt IlluminaReadSim2.txt 2}}}
====Reference Files====
PerM concatenates all input file names to generate the output file name.  If this causes  the length of the output file name to exceed the OS limit, rename and limit the length of the reference file names.

====Read Files====
PerM expects reads from either the SOLiD or Solexa sequencer. If the first read file has the  extension ".csfasta", then all reads are assumed to be from the SOLiD sequencer. Other file types are treated as Solexa data.  Read lengths are assumed to be equal to the first read in the first data file.


====Full Sensitivity Thresholds====
PerM supports full sensitivity for 2, 3, or 4 mismatches as well as sensitivity thresholds specific to the SOLiD sequencer which changes consecutive colors in the presence of a SNP.  The SOLiD specific sensitivity thresholds of  "one SNP candidate + 1 color error" and "two SNP candidates" are denoted as *11* and *20*. 
  
Ex: {{{./PerM_P anthracis.fasta 7B.csfasta 11}}}

== Configuration File ==  
A configuration file can be given as the only command line option. If no command line options are given PerM will attempt to open the default configuration file,  "config.pref". Following is an example of a configuration file as an attached zip file:
{{{
anthracis.fasta
7B.csfasta
3
true
false
true
}}}
The first two rows are the *Reference* and *Read file*. The third row provides the sensitivity threshold. The fourth rows should be "true" if ambiguous reads are excluded in the output; otherwise, set it false. The fifth row is to reconstruct the index or not.
The sixth row is to save the index or not. 

=OUTPUT=
The summary of the mapping results are printed directly to the screen. They include the  number of reads mapped with each number of mismatches and the running time of each step. 
One can "grep" the summary info by redirect the standard output. 
==Index==
The genome-preprocessing version saves the reference index by default. It requires 4.5 bytes (one integer + 4 bits) + 256M memory for mapping. As always, the memory and disk should have enough capacity. 
==Mapping Results==
The mapping results are printed in a `*`.mapping file which is named by concatenating the input files. Each line is the result of the best mapping (fewest mismatches). The info in each line is read in the following order:
  * Read Tag (Extract from the previous line of the reads input file. If the tag is missing, a fake tag will be used.)
  * Read Order(the order of the read in the read set, where reads with 'N' are skipped.)
  * The read sequence. For SOLiD reads, the first base from the agent (not in the reference) is eliminated from display. The first color signal is translated into a base for display.
  * Chromosome ID (begins at 0 and numbered according to the order in the reference list)
  * Chromosome Locus ID (the first position in each chromosome begins at 0) 
  * The mapped reference sequence. For SOLiD reads, this region is translated into colors for comparison to the read.
  * Positive (forward) or negative (backward) strand that the reads mapped to.
  * Number of mismatches in the mapping. 

Changes are expected in the near future for I/O and options standardization with other mapping programs, especially Applied Biosystems pipeline.