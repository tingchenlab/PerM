#labels Featured
If you have any usage question, please email "yanghoch at usc.edu".

== CONTENTS ==  
=== [http://code.google.com/p/perm/wiki/Compile Compile] ===
=== [http://code.google.com/p/perm/wiki/Input Input Files]===
=== [http://code.google.com/p/perm/wiki/Output Output Files]===
=== [http://code.google.com/p/perm/wiki/Limitation Limitation and Future work] ===
=== [http://code.google.com/p/perm/wiki/ProgramComparisons Comparison ] ===
=== [http://code.google.com/p/perm/wiki/QAin2008USC_MCB_Retreat Q & A ] ===
== SYNOPSIS ==  
To use the command line, type PerM with the args in the order.

For single end read: {{{PerM <Ref> <Reads> [options]}}}

For example:
 * {{{./PerM Ref.fasta Reads.fasta -v 5 }}}
 * {{{./PerM RefFilesList.txt ReadsSetFilesList.txt -v 5 -u unmappedReads.fa -E }}}
 * {{{./PerM Ref.fasta Reads.csfasta -v 5 -m -s my.index --delimiter ',' --seed F3}}}
 * {{{./PerM my.index SingleEndReads.csfasta -v 5}}} 
For paired end read: {{{ PerM <Ref> -1 <F3_Reads> -2 <R3_Reads> [options] }}}

For example:
 * {{{./PerM ref.fa -1 F3.fa -2 R3.fa -U 3000 -L 100 -v 5 -A -m -s -o out.sam}}}
 * {{{./PerM ref.txt -1 F3.fq -2 R3.fq -v 5 -m -s my.index -o out.mapping --seed F3}}}
 * {{{./PerM my.index -1 F3.fq -2 R3.fq -U 3000 -L 100 -v 5 -A -o out.sam}}}
== Command Line Options ==  
==== Required Arguments ====
 # The reference file should be in fasta format with the corresponding ext name ex: .fasta, .fna. or .fa. For transcriptom with multiple genes or isoforms as reference, concatenate all fasta in a fasta file. Or, if there are many files, one for each chromosome, ex: chr1.fa to chrY.fa, list them in a .txt file, so PerM knows it is a file listing the path of multiple fasta file.  
 # The reads file should be in the .fasta, .fastq, .csfasta or .csfastq format. PerM parses a file according to it's ext file name, or the format specified by flag *{{{--format <format>}}}*. If there are multiple read files, list each file names in a .txt file, with each row a path of the reads file. PerM takes it as the input and can map multiple read sets in parallel by OpenMP. 
 # Mismatch threshold could be a integer 2 to 5. For reads over 64 bp, PerM allows double the number of mismatches than the given threshold.
==== Options ====
 ||*Arg* || *Value* || *Discription* ||
 ||*-A*|| || Output all alignments within the mismatch threshold, end-to-end.||
 ||*-B*|| || Output best alignments in terms of mismatches in the threshold. ||
 ||*-E*|| || Output only the unique mapped reads. ||
 ||*-m*|| || Create the reference index, without reusing the saved index. ||
 ||*-s*||_P_|| Save the reference index to accelerate the mapping in the future. If path _P_ is not specify, the default path will be used. ||  


 * *-v* _I_     ,where I i the number of mismatches allowed in one end.
 * *-T* _I_     ,where I is tbe length to truncate read length, say 30 means use only first 30 bases (signals). Don't put the number if the full read is meant to be used.
 * *-o* _P_,     where P is the the output path for one read set. PerM's output are in .mapping or .sam format, determined by the ext name of P. 
 * *-d* _P_,     where P is the the output dir for multip read set
 * *-u* _P_,     Print the fasta(fastq) file of those unmapped reads to a file
 * *--ignoreQS*     Ignore the quality scores in fastq or QUAL files.
 * *--seed* _{F2 | S11 | F3 | F4}_     Use the specified seed pattern. Check [http://bioinformatics.oxfordjournals.org/cgi/content/abstract/btp486 our paper] to balance the sensitivity and running time.
 * *--readFormat* _{fasta | fastq | csfasta | csfastq}_     Read in reads in the specified format, instead of gussing according to the ext name.
 * *--delimiter* _c_,     where _c_ is a character which is used as the delimiter which is used to parse the read id. This is used for read set which attach additional information in the read id, using character ',', ':', '|' or other symbols. 

{{{ Ex:  ./PerM Ref.fa Reads.fa -v 5 -E -T 36 -m -s -o out.sam }}}

 * PerM will report only the uniquely mapped reads within 5 mismatches in the first 36 bases.
 * PerM will reconstruct and save the indexes to the default path for future mappings.
 * PerM will output the mappings file to out.sam in the sam format.

==== Options for mate-paired reads ==== 
PerM deals with mate-paired reads by mapping each end separately. All combination of mated paired mapping in the same ref will be printed, if their separation are in the expected ranged, specified by the upper bound and the lower bound. 

 * *-e *     Exclude ambiguous paired. 
 * *-L _I_*     mate-paired separate lower bound
 * *-U _I_*     mate-paired separate upper bound, 
 * *-o _P_*     where P is the path (single paired read set) or the directory (multiple paired read sets)

The default is set as lower bound 0 bp and upper bound 3000 bp. The upper bound and lower bound can be negative, which may catch the re-arrangement variations. User should use argument {{{ -A }}} to avoid missing the correct pairs. However, this may let the running time become very slow, if both ends are in the repetitive regions. 

{{{Ex:  ./PerM -1 F3.fq -2 R3.fq -U 500 -L 200 -e -A -v 5 -m -s -o out.sam.}}}
  * All Paired mapping with separation outside the [200bp, 500bp] range won't be output.
  * All mapped-paired with multiple qualified mapped pairs won't be output for {{{ -e }}}
  * For each end, try all mapping locations within 5 mismatches. 
  * PerM will reconstruct and save the index to the default path for future mappings.
  * PerM will output the mappings file to out.sam in the sam format.

==== Default setting ====  
  * Allow only two mismatches in each end and use seed {{{F2 or S_11}}}
  * Print the best alignments for each read in term of mismatches number. 
  * Output files in `*`.mapping format.
  * Try to read the saved index in default name, before building the new one.
  * Won't save the index in file, unless {{{-s }}} is specified. 
 
== Paralleled Mapping ==
PerM simultaneously maps multiple reads sets in a list by querying the same index. It will detect how many CPU (cores) are available and assign each of them a read set. If a read set is done, the next read set in the list will be processed automatically. Each read set will have its own output file `*`.mapping. To better utilize all CPUs on a node, large reads are suggested to be split to many small read sets and put in the list. 
When multiple nodes are used in the same file system, the index should be pre-built first by one node; the other node will read the pre-built index with out building index again. Without pre-built index, each machine will try to build their own index, wasting CPU hours and may cause insufficiency of disk quota. 