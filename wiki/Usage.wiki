#labels Featured
If you have any usage question, please email "yanghoch at usc.edu".

= Compile =
Download and unzip the source code. (Type unzip ./PerM\ 0.1.0\ GCC.zip in linux) in the directory with the download). For Linux and gcc user, type make in the unzip directory to generate the execute file ./PerM. Note, the attached make file is for linux with gcc 4.2 or later. Because OpenMP are supported after gcc 4.2, if your compiler is earlier version, use an alternative makefile (no openMP) with the flag "-fopenmp" removed, and only single CPU will be utilized. The code has also been test with visual c++ on a Win32 machine, without "openmp". 

= Options =
PerM uses both a configuration file and command line options. The input and configuration files should be in the same path.  

== Command Line Options ==  
To use command line, type PerM with the args in the order.
(1) reference file (2)read set (3) mismatch threshold (4) options flags
{{{Ex:  ./PerM Ref.fasta Reads.fasta 5 -A -s}}}
{{{Ex:  ./PerM RefFilesList.txt ReadsSetFilesList.txt 2 -E -m}}}
PerM chooses different ways to parse the input files based on their ext name.
# Reference file should be a .fasta or .fa file. Otherwise, PerM assumes
it is a file listed a path of a .fasta or .fa file in each line.

# Reads file should be in .fasta, .fastq, .csfasta or .prb format.
PerM parses the file according to it's ext filename. Otherwise, PerM assumes
it is a file listed a path to other read files in each line.

# Mismatch threshold could be 2 to 5. For reads over 64, 
PerM allows double the number of mismatches threshold.

# Options:
By default, PerM outputs all the best alignments in terms of the mismatches number with in the threshold, end-to-end. It will try to use the saved index. If not found, reconstruct the index. The following option flag can changed the default setting.
It will try to use the saved index. If not found, reconstruct the index.

-A     Output all alignments within the mismatch threshold.
-E     Output only the unique mapped reads.
-s     Save the reference index to acclerate the mapping in the future.
-m     Create the reference index, without reused the saved index.
-T L, where L is an integer to truncate read length, say 30 means use only first 30 bases (signals). Don't put the number if the full read is meant to be used.

Ex: {{{./PerM ref.fasta reads.csfasta 3 -E -s -T 32}}}
will reports only uniquely mapped reads within three mismatches in their first 32 bases and saved the index for future mapping. The following is some detail description for each argument.
  
====Reference Files====
PerM takes single or multiple fasta files as the reference. If there are multiple fasta files, make a list file, say {{{HumanGenome.txt}}}, with each fasta file name in a row, as the command line input example as the above. PerM also takes fasta with multiple sequences separated by a line start with "> Sequence Name", as input which typically is a transcripts or contigs. The first word after ">" will be used as a "Sequence Name", which will be showed with the corresponding alignments. Inside our program, sequences are concatenated and separated by "N", so no junction will be aligned. Only ACGT and N are allowed in the reference file. Other valid nucleotide symbol such as U, R, Y, M, K, S, W, B, D, H, V will be modified to "N" after 0.0.6 version. Note PerM concatenates the file names in the list to generate the file name for index. Limited by OS the system, the index file name could be too long to be saved. 

====Read Files====
PerM expects reads from either the SOLiD or Solexa sequencer. If the first read file has the  extension ".csfasta", then all reads are assumed to be from the SOLiD sequencer. Other file types are treated as Solexa data.  Read lengths are assumed to be equal to the first read in the first data file. 

For SOLiD reads, PerM will try to read the quality file with the same base name as the read set, however with the ext name ".qual". That is, if the read file name is 7B.csfasta, its quality file "7B.qual" should be put beside.
If quality score file is not available, or the reads and quality scores can't be matched, only the read sequences will be used. 

(Tips! Use our shell splitReads.sh to split fasta or csfasta file into one million reads per set. It will generate a list file. Use the list file name as the input ptr of PerM.) 

====Full Sensitivity Thresholds====
PerM supports full sensitivity for 2, 3, or 4 mismatches as well as sensitivity thresholds specific to the SOLiD sequencer which changes consecutive colors in the presence of a SNP.  The SOLiD specific sensitivity thresholds of  "one SNP candidate + 1 color error" and "two SNP candidates" are denoted as *11* and *20*.  
Ex: {{{./PerM_P anthracis.fasta 7B.csfasta 11 -E}}}
PerM outputs alignments with higher number of mismatches, when 5, 6 or 7 are set in this parameter, although no full sensitivity are guaranteed.

====Include or Exclude Ambiguous Mapping====
The default setting will exclude the output of ambiguous reads. Use "-A" flag as the forth parameter to output all mappings. In this case, a maximum 100 mapping per read will be print consecutively in the output file. 

== Configuration File ==  
A configuration file can be given as the only command line option. If no command line options are given PerM will attempt to open the default configuration file,  "config.pref". Following is an example of a configuration file as an attached zip file:
{{{
anthracis.fasta
7B.csfasta
3
true
false
true
}}}
The first two rows are the *Reference* and *Read file*. The third row provides the sensitivity threshold. The fourth rows should be "true" if ambiguous reads are excluded in the output; otherwise, set it false. The fifth row is to reconstruct the index or not.
The sixth row is to save the index or not. 

=Output=
The summary of the mapping results are printed directly to the screen. They include the  number of reads mapped with each number of mismatches and the running time of each step. 
One can "grep" the summary info by redirect the standard output. 
==Index==
The genome-preprocessing version saves the reference index by default. It requires 4.5 bytes (one integer + 4 bits) + 256M memory for mapping. As always, the memory and disk should have enough capacity. 
==Mapping Results==
The mapping results are printed in a `*`.mapping file which is named by concatenating the input files. Each line is the result of the best mapping (fewest mismatches). The info in each line is read in the following order separated by tab:
  * Read Tag (Extract from the previous line of the reads input file. If the tag is missing, a fake tag will be used.)  
  * The read sequence. For SOLiD reads, the first base from the agent (not in the reference) is eliminated from display. The first color signal is translated into a base for display.
  * Chromosome ID (begins at 0 and numbered according to the order in the reference list)
  * Chromosome Locus ID (the first position in each chromosome begins at 0) 
  * The mapped reference sequence. For SOLiD reads, this region is translated into colors for comparison to the read.
  * Positive (forward) or negative (backward) strand that the reads mapped to.
  * Number of mismatches in the mapping or the sum of aligned quality scores if available. 

Changes are expected in the near future for I/O and options standardization with other mapping programs, especially Applied Biosystems pipeline.

= Paralleled Mapping =
PerM simultaneously maps multiple reads sets in a list by querying the same index. It will detect how many CPU (cores) are available and assign each CPU a read set, if available. If a read set is finished, the next read set in the list will be assigned to the available CPU automatically. Each read set will have its own output file `*`.mapping. To better utilize all CPUs on a node, large reads are suggested to be split to many small read sets and put in the list. 
When multiple nodes are used in the same file system, the index should be pre-built first by one node; the other node will read the pre-built index with out building index again. Without pre-built index, each machine will try to build their own index, wasting CPU hours and may cause insufficiency of disk quota. 

= Mate-paired Reads =
PerM deals with mate-paired reads by mapping each end separately. To keep most information, all combination of mated paired mapping in the same chromosome will be printed. Note this makes the running time become very slow, if both ends are in the repetitive regions. 

The upper bound and the lower bound of the mated-pair separation should be specified in the first line of the read files list, in a format # lowerBound upperBound
Ex: # 100 180. The following lines should be the file names of read sets

PerM takes two format of the paired end reads. 
(1) Concatenated 5'-3' end 3'-5' fasta file. 
(2) Two separated file of with _F3 and _R3. Each corresponding line is paired.
For input format (1), each file name should be listed in a row as single-end read file. 
For input format (2), the two paired file should be listed together in a row, separated by tab. Ex: reads_F3.csfasta \t reads_R3.csfasta. 

The output is in the ABI F3_R3\.mates format.(Described in the SOLiD System Application Document: AB Re-sequencing Analysis Pipeline. Page 15)

= Limitation =
PerM doesn't support SOLiD reads with more than 64 base pair.
PerM doesn't support single-end Illumina reads with more than 128 base pair.
PerM doesn't support mate-paired Illumina reads with more than 64 base pair in each end.
We suggest users to set the truncated read length less than 64, using -T 64 to mapped long reads with their first 64 bases. 

Currently, PerM will discard any reads with 'N'. Similarly, no reads will be mapped to any reference region with 'N'. This is the reason that users may experience that the total alignments founded by PerM is less than other mappers, given the same full sensitivity threshold. PerM switches di-nucleotide symbol (not ACGT) to N and removed other character from the reference. 